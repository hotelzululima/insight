.TH CFGRECOVERY "1" "March 2014" "Insight Framework @VERSION@" "User Commands"
.SH NAME
cfgrecovery \- Recover CFG based on executable
.SH SYNOPSIS
.B cfgrecovery
[\fIOPTION\fR] \fIEXECUTABLE\fR
.SH OPTIONS
Rebuild the CFG based on the analysis of executable binary files.
.TP
\fB\-c\fR, \fB\-\-config\fR FILE
set config file (default: ~/.cfgrecovery)
.TP
\fB\-C\fR, \fB\-\-create\-config\fR[=\fIFILE\fR]
create a config file (default: ~/.cfgrecovery)
.TP
\fB\-i\fR, \fB\-\-input\fR FILE
load an XML file FILE from previous analysis
.TP
\fB\-d\fR, \fB\-\-disas\fR TYPE
select disassembler TYPE (default: linear)
.TP
\fB\-l\fR, \fB\-\-list\fR
display all available disassembler methods
.TP
\fB\-f\fR, \fB\-\-formats\fR FMT[=FILE]<,FMT[=FILE]>
set disassembler output format and the file where to write it.
.br
current formats: asm|asm\-dot|mc|mc\-dot|mc\-xml (default: asm)
.TP
\fB\-S\fR, \fB\-\-symbols\fR
display known symbols
.TP
\fB\-e\fR, \fB\-\-entrypoint\fR ADDR
force entrypoint to be ADDR
.TP
\fB\-E\fR, \fB\-\-endian\fR B|L
force endianness to big='B' or little='L'
.TP
\fB\-b\fR, \fB\-\-target\fR TARGET
force BFD target to TARGET
.TP
\fB\-m\fR, \fB\-\-architecture\fR ARCH
force BFD architecture to ARCH
.TP
\fB\-n\fR, \fB\-\-no\-stub\fR
disable external procedures default stubbing
.TP
\fB\-o\fR, \fB\-\-output\fR FILE
write outputs to FILE
.TP
\fB\-v\fR, \fB\-\-verbose\fR
increase verbosity level ('\-vv'=level 2)
.TP
\fB\-D\fR, \fB\-\-debug\fR
enable debug traces
.TP
\fB\-h\fR, \fB\-\-help\fR
display this help
.TP
\fB\-V\fR, \fB\-\-version\fR
display version and exit
.SS "assembler output options:"
.TP
\fB\-\-asm\-with\-bytes\fR
display the opcode bytes
.TP
\fB\-\-asm\-with\-holes\fR
do not skip the empty gaps in memory
.TP
\fB\-\-asm\-with\-symbols\fR
display symbols whenever possible
.SS "miscellaneous options:"
.TP
\fB\-\-sink\-nodes\fR
list sink nodes
.PP
This software tries to recover the original CFG based only
on an analysis of executable binary files.

.SH DESCRIPTION

.SS Disassembler methods

Disassembler types ('value to pass' = description):
.br
'flood'       = flood traversal
.br
  'linear'    = linear sweep
.br
  'recursive' = recursive traversal
.br
  'concrete'  = concrete simulation
.br
  'symbolic'  = symbolic simulation with formula

.SS Output formats
.br
  'asm'     = original asm language
.br
  'asm-dot' = dot format of the asm output
.br
  'mc'      = microcode language
.br
  'mc-dot'  = dot format of the microcode output
.br
  'mc-xml'  = XML format of the microcode output

.SH FILES
.SS Configuration file

By default, \fBcfgrecovery\fR can operates without any configuration
file. But, advanced manipulation of executable may require to specify
a few element of the context of the program (e.g. initial value of
registers, user inputs, ...). This section describe how to precisely
tune your configuration file in order to get the best of the tool.

Dump a first base configuration file with the \fI-C\fR option and
edit it. Comments are denoted by \fI#\fR characters.

.SS SMT-solver configuration

Insight symbolic simulation engine requires an SMT-solver to operate
properly. Several SMT-solvers are supported: MathSAT and Z3. MathSAT
can be used either through its library API or through an external
process running the \fImathsat\fR executable. Z3 support is only
available through an external process running the \fIz3\fR executable.
The lines required to set-up any of the links is described below:

.B MathSAT (API)
.br
kernel.expr.solver.name = mathsat


.B MathSAT (Process)
.br
kernel.expr.solver.name = process
.br
kernel.expr.solver.process.command = mathsat
.br
kernel.expr.solver.process.args =


.B Z3 (Process)
.br
kernel.expr.solver.name = process
.br
kernel.expr.solver.process.command = z3
.br
kernel.expr.solver.process.args = -smt2 -in

.SS Warnings and errors output settings

The configuration file can be used to mute or to display warning and
error messages. Here are the possible triggers:

logs.debug.enabled = true|false
.br
logs.stdio.enable-warnings = true|false
.br
logs.stdio.enabled = true|false

.SS Simulator settings

The symbolic simulator of Insight requires to set initial default
values of the context such as the stack-pointer initial value and
register initial values.

disas.simulator.init-sp = 0xffff0000
.br
disas.simulator.zero-registers = true|false

The simulator only collect traces of executions. In order to garanty
termination of the process, we need to set the number of time an
execution is going through a program point. This is triggered through
the following option:

disas.simulator.nb-visits-per-address = 20

.SH EXAMPLES

TODO: Give some insightful examples.

.SS A full example of configuration file

Here is a full example of configuration file (recommended example).

.br
# CFGRecovery configuration file
.br
kernel.expr.solver.debug-traces = false
.br
kernel.expr.solver.name = mathsat
.br

.br
logs.debug.enabled = true
.br
logs.stdio.enable-warnings = true
.br
logs.stdio.enabled = true
.br

.br
disas.simulator.init-sp = 0xffffff00
.br
disas.simulator.nb-visits-per-address = 5
.br

.br
disas.symsim.map-dynamic-jump-to-memory = false
.br
disas.symsim.dynamic-jump-threshold = 1000
.br

.SH AUTHOR
Written by the Insight team.

.SH "REPORTING BUGS"
CFGRecovery home page: <https://insight.labri.fr/trac/wiki/CFGRecovery>
.br
Report CFGRecovery bugs to <https://insight.labri.fr/trac/newticket>
.br
General help using Insight framework: <https://insight.labri.fr/>

.SH COPYRIGHT
Copyright \(co 2010-2014 CNRS, IPB, Universite de Bordeaux. License BSD 2-clauses.
.br
This is an open-source software: you are free to change and
redistribute it. There is NO WARRANTY, to the extent permitted by law.

.SH "SEE ALSO"
\&\fIpynsight\fR\|(1).
